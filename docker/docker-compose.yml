version: "3.8"
services:
#  SERVICES
  livescore-service:
    build:
      context: ../livescore-service
      dockerfile: ../livescore-service/Dockerfile
    environment:
      - SERVER_PORT=8080
      - LIVESCORE_API_TOKEN=1a64ddb058a541a4a3d3ea079ee68176
    ports:
      - "8080:8080"
    labels:
      - livescore-service
    networks:
      - spring-cloud-network
    container_name: livescore-service

  news-service:
    build:
      context: ../news-service
      dockerfile: Dockerfile
    environment:
      - SERVER_PORT=8081
      - SPRING_NEO4J_URI=bolt://neo4j:7687
      - NEO4J_AUTH_USERNAME=neo4j
      - NEO4J_AUTH_PASSWORD=neofourj
    ports:
      - "8081:8081"
    labels:
      - news-service
    networks:
      - spring-cloud-network
    container_name: news-service

  payment-service:
    build:
      context: ../payment-service
      dockerfile: Dockerfile
    environment:
      - SECURITY_ENABLED=false
      - SERVER_PORT=8082
    ports:
      - "8082:8082"
    labels:
      - payment-service
    networks:
      - spring-cloud-network
    container_name: payment-service

  predictions-service:
    build:
      context: ../predictions-service
      dockerfile: Dockerfile
    environment:
      - SECURITY_ENABLED=false
      - SERVER_PORT=8083
      - PREDICTIONS_API_TOKEN=AulsEKOpaZGZwvo1416iCfchRMXwwPsHf5Gs7y2dkZOPDqgtlDJcsPmrvZ5W
    ports:
      - "8083:8083"
    labels:
      - predictions-service
    networks:
      - spring-cloud-network
    container_name: predictions-service

  user-service:
    build:
      context: ../user-service
      dockerfile: Dockerfile
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://user-mongo:27017/user_local
      - SERVER_PORT=8084
    ports:
      - "8084:8084"
    labels:
      - user-service
    networks:
      - spring-cloud-network
    container_name: user-service

  #MONGO DATABASE
  user-mongo:
    image: mongo:6.0
    environment:
      - MONGO_INITDB_DATABASE=user_local
    volumes:
      - .mongo/setup/:/docker-entrypoint-initdb.d/
      - .mongo/data/:/data/db/
    ports:
      - "27017:27017"
    networks:
      - spring-cloud-network
    container_name: mongo-user-database

  #NEO4J DATABASE
  neo4j:
    image: neo4j:enterprise
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./neo/conf:/conf
      - ./neo/data:/data
      - ./neo/import:/import
      - ./neo/logs:/logs
    environment:
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - dbms.directories.import="/"
    networks:
      - spring-cloud-network
    container_name: neo-news-database
#NETWORK
networks:
  spring-cloud-network:
    driver: bridge
